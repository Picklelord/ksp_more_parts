PART
{
	name = probeIonEngineXenon
	module = Part
	author = PickledIndustries
    
    MODEL
    {
        model = Squad/Parts/Engine/ionEngine/model
    }  
	scale = 1
	rescaleFactor = 1
	node_stack_top = 0.0, 0.2135562, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -0.1872844, 0.0, 0.0, -1.0, 0.0, 1
	TechRequired = ionPropulsion
	entryCost = 16800
	cost = 37000
	category = Engine
	subcategory = 0
	title = IX-80 "Dusk" Turbo Hyper Xenon Engine
	manufacturer = Pickled Industries Ltd
	description = By emitting ionized Xenon through a small thruster port, Dusk has all the settings cranked to MAX for turbo efficency, but with now 2 downsides of very high energy usage and heat production... To achieve this we used a lot of "Magnatism". After PickledInc stole the blueprints of the "Dawn" Ion engine, an Ionic Symphonic Protonic Electronics engineer let loose that the "Dawn" engine really did have a "Dark Magic" core that lasts for 120 years. PickledInc adjusted this Core and it should last well over 680 years... We always need more years...
	attachRules = 1,0,1,1,0
	mass = 0.15
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	bulkheadProfiles = size0
	tags = (dusk deep drive efficient engine (ion probe thruster vacuum xenon
	MODULE
	{
		name = ModuleEnginesFX
		engineID = Ion
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.001
		minThrust = 0
		maxThrust = 100
		heatProduction = 100
		powerEffectName = IonPlume
		EngineType = Electric
		PROPELLANT
		{
			name = ElectricCharge
			ratio = 80
		}
		PROPELLANT
		{
			name = XenonGas
			ratio = 0.245
		}
		atmosphereCurve
		{
			key = 0 4200
			key = 1 300
			key = 1.2 0.001
		}
	}
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 75					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.35		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0.15    	//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.05	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1.05    	//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.125		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1900				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 80						//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
	MODULE
	{
		name = ModuleCargoPart	
		stackableQuantity = 20
		packedVolume = 150
	}	
	MODULE
	{
		name = FXModuleAnimateThrottle
		animationName = colorAnimation
		dependOnEngineState = True
		responseSpeed = 0.5
		engineName = Ion
		dependOnThrottle = True
	}
	EFFECTS
	{		
		IonPlume
		{
			AUDIO
			{
				channel = Ship
				clip = sound_IonEngine
				volume = 0.0 0.0
				volume = 0.05 0.20
				volume = 1.0 0.25
				pitch = 0.0 0.2
				pitch = 1.0 0.8
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/IonPlume
				transformName = thrustTransform
				emission = 0.0 0.0
				emission = 0.25 0.5			
				emission = 1.0 1.0
				//speed = 0.0 0.0
				//speed = 1.0 1.0
				localPosition = 0, 0, 0.12
			}
		}
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 112
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
}
